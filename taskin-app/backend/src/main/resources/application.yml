# Configuração principal do Taskin Backend
spring:
  application:
    name: taskin-backend
  
  # Configuração do banco H2
  datasource:
    url: jdbc:h2:mem:taskindb
    driver-class-name: org.h2.Driver
    username: taskin
    password: taskin123
    
  # Configuração do H2 Console
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
        
  # Configuração do JPA
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        
  # Configuração do Jackson
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
      
  # Configuração de upload de arquivos
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Configurações específicas do Taskin
taskin:
  jwt:
    secret: taskin-super-secret-key-for-jwt-token-2024-spring-boot
    expiration: 86400000 # 24 horas em milliseconds
    refresh-expiration: 604800000 # 7 dias em milliseconds
  
  app:
    name: Taskin API
    version: 1.0.0
    description: API para gerenciamento de tarefas
    
  cors:
    allowed-origins: 
      - http://localhost:*
      - http://192.168.*.*:*
      - https://*.ngrok.io
      - exp://*
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# Configuração do servidor
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
  error:
    include-message: always
    include-binding-errors: always

# Configuração do Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

# Informações da aplicação
info:
  app:
    name: ${taskin.app.name}
    description: ${taskin.app.description}
    version: ${taskin.app.version}
    java-version: ${java.version}
    spring-boot-version: ${spring-boot.version}

# Configuração de logging
logging:
  level:
    root: INFO
    com.taskin: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Configuração do Swagger/OpenAPI
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true
  info:
    title: Taskin API
    description: API REST para gerenciamento de tarefas e produtividade
    version: 1.0.0
    contact:
      name: Taskin Support
      email: support@taskin.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT

---
# Perfil de desenvolvimento
spring:
  config:
    activate:
      on-profile: dev
      
  datasource:
    url: jdbc:h2:file:./data/taskindb
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    
logging:
  level:
    com.taskin: DEBUG
    org.springframework.web: DEBUG

taskin:
  jwt:
    secret: dev-secret-key-not-for-production
    
---
# Perfil de produção
spring:
  config:
    activate:
      on-profile: prod
      
  datasource:
    url: ${DATABASE_URL:jdbc:h2:file:./data/taskindb}
    username: ${DB_USERNAME:taskin}
    password: ${DB_PASSWORD:taskin123}
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    
  h2:
    console:
      enabled: false

logging:
  level:
    root: WARN
    com.taskin: INFO
  file:
    name: logs/taskin-backend.log

taskin:
  jwt:
    secret: ${JWT_SECRET:production-secret-key-must-be-provided}

server:
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics